[{"title":"Hexo(2)使用hexo-abbrlink为博客创建永久链接","url":"/posts/43cd3f82.html","content":"Hexo文章链接默认的生成规则是permalink: :year/:month/:day/:title/，是按照年、月、日、标题来生成的。如果文章标题是中文的话，URL链接是也会是中文。如果文章的标题发生变化的话，那么文章的链接也会发生变化。URL静态化可以提高博客的访问体验，博客内页更容易被搜索引擎收录。\n使用hexo-abbrlink插件，可以为文章生成永久链接。\n安装hexo-abbrlinknpm install hexo-abbrlink --save\n\n配置hexo-abbrlink安装结束后，在_config.yml中找到permalink:，修改为：\npermalink: posts/:abbrlink.html  # 此处可以自己设置，也可以直接使用 /:abbrlink.html\nabbrlink:\n    alg: crc16   #算法：crc16(default) and crc32\n    rep: dec     #进制：dec(default) and hex\n\n验证hexo-abbrlink使用hexo generate命令生成静态文件，在本地用hexo server确认链接没有问题，推送到博客服务器上即可，更换算法或者进制都会导致文章链接发生变化。\n","categories":["MyHexo"],"tags":["Hexo"]},{"title":"Hexo(1)为Hexo博客生成站点地图(Sitemap)","url":"/posts/91317fb1.html","content":"Hi！使用Hexo来写博客已经一年了。Hexo拥有清晰的页面结构，纯静态界面。我博客的代码托管在Github上，管理起来非常的便利。决定为博客添加上站点地图，让更多的朋友可以通过搜索引擎访问到我的博客。\nHexo安装Sitemap安装GoogleSitemapnpm install hexo-generator-sitemap --save\n\n安装百度Sitemapnpm install hexo-generator-baidu-sitemap --save\n\nHexo配置Sitemap安装结束后，在_config.yml中找到url:，改成你自己的域名\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: http://example.com\npermalink: :year/:month/:day/:title/\npermalink_defaults:\npretty_urls:\ntrailing_index: true # Set to false to remove trailing 'index.html' from permalinks\ntrailing_html: true # Set to false to remove trailing '.html' from permalinks\n\n验证站点配置将页面提交到服务器后，通过域名/sitemap.xml或者域名/baidusitemap.xml可以进行访问sitemap\n在谷歌和百度的站长工具上提交我们sitemap，搜索引擎就会收录博客。\n","categories":["MyHexo"],"tags":["Hexo"]},{"title":"Selenium自动化（1）Python开发环境配置","url":"/posts/34e6b954.html","content":"安装浏览器驱动浏览器驱动是和浏览器对应的。 不同的浏览器需要选择不同的浏览器驱动。\n目前主流的浏览器中，谷歌 Chrome 浏览器对 Selenium自动化的支持更加成熟一些。\n\n谷歌浏览器驱动下载，注意浏览器驱动 必须要和浏览器版本匹配。\n\n安装浏览器驱动\n把exe文件复制到浏览器的安装目录下：C:\\Program Files (x86)\\Google\\Chrome\\Application（根据自己实际安装目录）\n\n配置系统环境变量\n此电脑→右击属性→高级系统设置→环境变量→用户变量→Path→编辑→新建\nC:\\Program Files (x86)\\Google\\Chrome\\Application\\\n\n安装Selenium库不同的编程语言选择不同的Selenium客户端库。\n对应我们Python语言来说，Selenium客户端库的安装非常简单，用 pip 命令即可。\n\n打开 命令行程序，运行如下命令\n\npip install selenium\n\n\n如果安装不了，可能是网络问题，可以指定使用国内的豆瓣源\n\npip install selenium -i https:&#x2F;&#x2F;pypi.douban.com&#x2F;simple&#x2F;\n\n测试环境下面的代码, 可以自动化的打开Chrome浏览器，并且自动化打开百度网站。\n# 测试Chrome驱动\nfrom selenium import webdriver\n\ndriver = webdriver.Chrome()\nurl = 'https://www.baidu.com/'\ndriver.get(url)\ndriver.maximize_window()\n\n\n","categories":["杂谈"],"tags":[]},{"title":"Windows DOS命令批处理脚本学习","url":"/posts/739b02be.html","content":"基础命令\n清除cmd窗口（clean screen）\n\ncls\t\t\t\t\n\n\n退出\n\nexit\n\n\n查看对应目录下的文件\n\ndir\n\n\n\n创建文件夹\n\nmkdir\n\n\n\n查看网络链接\n\nnetstat\n\n\n\n重置网络\n\nnetsh winsock reset \t\t\t\n\n\n管道符，用来并列条件\n\n|\t\t\t\t\n\n","categories":[],"tags":[]},{"title":"群晖Docker安装frp服务端","url":"/posts/98915107.html","content":"frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。\n配置Docker容器\n下载最0.43.0版本的frp映像\n\n\n\n查看容器的说明文档：\nhttps://registry.hub.docker.com/r/snowdreamtech/frps/\n\n容器的使用方法：\ndocker run  --network host -d -v &#x2F;etc&#x2F;frp&#x2F;frps.ini:&#x2F;etc&#x2F;frp&#x2F;frps.ini --name frps snowdreamtech&#x2F;frps\n\n创建docker容器\n\n\n启用自动重新启动\n\n\n设置frps1容器的网络模式为Host模式\n\n\n配置储存空间前要先将frps.ini文件上传（配置文件说明在下方）\n\n\n配置储存空间\n\n\n\n  \n配置frp服务端\nfrps.ini配置文件说明\n\n[common]\n# 监听部分的配置\nbind_addr = 0.0.0.0\nbind_port = 7000\nbind_udp_port = 7001\nkcp_bind_port = 7000\n\n# 面板部分的配置\ndashboard_addr = 0.0.0.0\ndashboard_port = 7500\n\n# 登录面板的账号密码\ndashboard_user = admin\ndashboard_pwd = passwd\n\n# 设置协议下代理端口\nvhost_http_port = 7080\nvhost_https_port = 7081\n\n# 这里设置为客户端配置的token\ntoken = 12345678              \n\n\n\n可以访问登录面板即配置成功\n\n\n\n","categories":[],"tags":["群晖"]},{"title":"群晖Docker配置阿里云镜像","url":"/posts/16f5942e.html","content":"由于Docker官方仓库Docker Hub的服务器在国外，拉取Docker镜像时候速度慢，连接不稳定，经常发生拉取到一半连接中断的情况，配置国内的阿里云镜像仓库可以改善问题。\n\n阿里云镜像加速器\n\n注册阿里云账号\n容器镜像服务-镜像工具-镜像加速器\n\n\n群晖Docker启用注册表镜像进入群晖的Docker，左侧点击”注册表“，选择”设置“\n\n\n选中存储库Docker Hub，然后点击“编辑”\n\n勾选“启用注册表镜像”，粘贴阿里云镜像，点击确认\n\n参考资料：https://www.runoob.com/docker/docker-mirror-acceleration.html\n","categories":[],"tags":["群晖"]},{"title":"CentOS7文件系统基本操作","url":"/posts/1bba46e8.html","content":"实验环境为Centos7.5\n$ touch tempfile #新建名为tempfile的文件\n\n\n\n$ ls -a #--all的缩写，显示所有的文件，包括隐藏文件\n\n\n$ ls / #显示根目录下的文件\n\n\n\n$ pwd #（英文全拼：print work directory） 命令用于显示工作目录\n\n\n$ ls -l tempfile #显示文件详情信息\n\n\n$ mkdir Files #新建名为Files的文件夹\n\n\n$ cp tempfile tempfile.cp #复制tempfile并重命名为tempfile.cp\n\n\n$ mv tempfile /tempfile.mv #移动文件到根目录下并重命名为tempfile.mv\n\n\n$ rm tempfile.cp #删除名为tempfile.cp的文件\n\n\n","categories":["Linux"],"tags":[]},{"title":"java开发-字符串连接","url":"/posts/54db1d1e.html","content":"\n字符串连接concat()\n\npublic class Demo &#123;\n    public static void main(String[] args) &#123;\n        String name1 = \"java\";\n        name1 = name1.concat(\",hello\");\n        System.out.println(name1);\n    &#125;\n&#125;","categories":["杂谈"],"tags":[]},{"title":"Hexo(0)Hello!World.我的Hexo博客第一篇文章","url":"/posts/7281cd31.html","content":"嘿！欢迎来到不完全编码电路的小窝，基于Hexo的静态博客。\n为什么我选择了Hexo？之前博客使用的框架是WordPress，是个有后端的动态博客框架，觉得有后端维护起来会方便些。事实证明我错了，WordPress依赖于数据库，而站点上的数据库经常崩溃（原因未知），导致博客无法访问。虽然重启数据库可以解决，但每次我发现博客崩溃时，时间可能已经过去好几天了，这段时间我是完全不知道的。直到某次崩溃后博客的图片无法加载，修复老半天无法解决后，决定将博客迁移到Hexo上。\n\n使用Hexo的感受如何？\nHexo管理上比WordPress差\n\nHexo加载速度比WordPress快许多\n\nHexo对Markdown的支持比WordPress更友好\n\n\n","categories":["MyHexo"],"tags":["Hexo"]},{"title":"3D打印（2）FDM开源项目介绍","url":"/posts/fb711935.html","content":"3D打印（2）FDM开源项目介绍2D打印的时代，中国的印刷术推动了世界。印本的大量生产，使书籍留存的机会增加，减少手写本因有限的收藏而遭受绝灭的可能性。印刷使版本统一，这和手抄本不可避免产生的讹误，有明显的差异。\n3D打印的时代，各行各业形成全球供应链，生产成本降低收益扩大。开源精神推动着新技术的发展，RepRap社区项目的出现，桌面级3D打印机迎来了蓬勃的发展。\nPrusa i3 3D打印机Prusa i3：由 RepRap社区的核心成员Jo Prusa设计迭代的第3代3D打印机，参考龙门吊的设计，吊臂为x轴，热床为y轴，丝杆推动x轴，设计巧妙结构简单组装起来方便。被各位广大的3D打印发烧友称为i3结构，可以说i3结构是全球数量最多的3D打印机，我所拥有的3D打印机也是i3结构。目前最新型号Original Prusa i3 MK3S+是我的梦想机型（价格太高还未拥有）。橙黑配色的外观看起来十分的高级，拥有自动无弹簧调平、XYZ无限位开关、黑科技5色打印（需要额外套件，得加钱）、60%的配件由3D打印制造。买机器还送小熊橡皮糖（φ(*￣0￣)），Prusa团队希望这包小熊橡皮糖可以消除你组装过程的烦恼。\n\n2012年，Jo Prusa在捷克共和国首都布拉格创建了Prusa Research公司，为世界各地的制造商提供价格合理、可访问且可靠的开源 3D 打印解决方案。旗下有切片软件PrusaSlicer，光固化打印机Original Prusa SL1S SPEED等。\n\nPrusa官网：https://www.prusa3d.com/\n\nPrusa Github社区：https://github.com/prusa3d\n\nPrusa RepRap社区：https://reprap.org/wiki/Prusa_i3\n\n\nVORON 3D打印机系列VORON国内称为沃龙（非官中），创建于2015年，VORON 项目的最初目标就是打造一款不折不扣的3D打印机，组装起来很有趣，使用起来也很愉快。它必须安静、干净、漂亮，并且可以24 小时不间断运行，不需要经常的维修。目前VORON团队设计的主要有有小巧的VORON0系列、大气的VORON2系列和VORONM4挤出机。目前VORON系列3D打印机已经成为各大发烧友绕不开的话题，正是因为它追求极致的设计理念。\n\nWe build space shuttles with gardening tools so anyone can have a space shuttle of their own.\n\n我们用园艺工具建造航天飞机，这样任何人都可以拥有自己的航天飞机。\n\n\n\nVORON系列的打印机均采用了CoreXY结构，即两个电机同时控制XY的移动，打印平台不会高速运动。远程挤出机加上轻量化打印喷头的设计，可以在高速打印下保证模型的质量。\n\nVORON官网：https://vorondesign.com/\nVORON Github社区：https://github.com/VoronDesign\n\nKossel 3D打印机Kossel外观上是三角形柱体，所以国内发烧友生动形象的称为“三角洲”。它以德国生物化学家、遗传学研究的先驱Albrecht Kossel的名字命名的，1910年，Kossel因在确定生物细胞的遗传物质核酸的化学成分方面的工作获得诺贝尔生理学或医学奖。Kossel的设计者Johann的想法简直天马行空，Kossel由3根轴配合驱动打印喷头在x轴，y轴和z轴的运动，在数学上不共线的3点唯一确定一个圆，所以Kossel 3D打印机的打印平台是圆形的。\n\n目前Kossel 3D打印机因为设计太过于逆天，组装和调试比较的麻烦，加工的模型精度比较差，需要定期的进行维护。在社区中的热度没有CoreXY和i3系列高,在国内可以查到的资料也比较的少。\n\nKossel RepRap社区：https://reprap.org/wiki/Kossel\nKossel Github社区：https://github.com/jcrocholl/kossel\n\n参考书籍：\n\n《3D打印实用手册：组装·使用·排错·维护·常见问题解答》&#x2F;\\[美\\]查尔斯·贝尔（Charles Bell）著.人民邮电出版社\n\n《4D打印：智能制造时代的工业，商业与社会变革》&#x2F;水木然，慕千里著.机械工业出版社；\n\n喜欢UP的文章或喜欢UP本人就点个爱心吧，你的每个评论UP都会看到。这对UP非常重要^_^\n","categories":["杂谈"],"tags":["3D打印","增材制造"]},{"title":"3D打印（1）技术介绍","url":"/posts/f64ace37.html","content":"近两个月来，发生了许多事情，心态一直不是很好。没有了持续的输入，也就没有内容的输出。先端正心态，调整好自己的状态吧，不希望浪费21年剩下的时间。博客也快一周年了，到时会写篇文章里碎碎念下，聊聊自己，聊聊未来。\n接触3D打印也有两年的时间了，直到在21年的寒假才拥有一台属于自己的3D打印机。每天捣鼓乐此不疲，直到有天我捣鼓到深夜，因为受寒感冒了有段时间（流汗黄豆）。其实3D打印也不是什么新技术了，不过近几年来因为各项技术的发展，特别是材料科学的发展，打印耗材价格下降，入门3D打印机的门槛下降，被更多人所接触到。得益于REPRAP这个开源项目社区，你可以自己组装一台3D打印机，下一篇我会介绍这些有趣的开源项目。\n二手市场买来的FDM3D打印机\n3D打印是增材制造的俗称，与传统减材制造车、铣、镗不同，3D打印是通过逐层堆积材料方式对工件进行成型。因此3D打印加工复杂造型工件的成型性能比减材制造强，可以在较低成本下加工复杂造型。根据原理不同，3D打印主要可以分为三类，分别是：熔融堆积成型、光固化成型、激光烧结成型。\n\n熔融堆积成型：\n\n是一种将各种热熔性的丝状材料（PLA、ABS和尼龙等）加热熔化成形的方法。机器原理简单，价格便宜，是受众很广的3D打印技术，接下来的博客也主要介绍熔融堆积成型（Fused Deposition Modeling,FDM）技术。\n\n光固化成型：\n\n用特定波长与强度的激光聚焦到光固化材料表面,使之由点到线,由线到面顺序凝固,完成一个层面的绘图作业,然后升降台在垂直方向移动一个层片的高度,再固化另一个层面。这样层层叠加构成一个三维实体，根据不同光源可以分为（DLP，SLA，LCD）三种不同类型的光固化成型技术，主要加工的材料为光敏树脂。\n\n激光熔融成型：\n\n主要分为_SLS_和_SLM_两种技术。\n_选择性激光烧结(Selective Laser Sintering,SLS)_，所用的材料是低熔点金属粉末和高分子材料的混合粉末。在加工的过程中低熔点的材料熔化但高熔点的金属粉末不熔化，利用被熔化的高分子材料实现黏结成型，所以实体材料存在孔隙度高、力学性能差等特点。\n_选择性激光熔化(Selective laser melting,SLM)，_顾名思义也就是在加工的过程中用激光使粉体完全熔化，不需要黏结剂而直接成型，成型后零件的精度和力学性能都要比SLS成型的好。\n参考书籍：\n\n1.  《3D打印实用手册：组装·使用·排错·维护·常见问题解答》&#x2F;\\[美\\]查尔斯·贝尔（Charles Bell）著.人民邮电出版社\n2.  《4D打印：智能制造时代的工业，商业与社会变革》&#x2F;水木然，慕千里著.机械工业出版社；\n\n喜欢UP的文章或喜欢UP本人就点个爱心吧，你的每个评论UP都会看到。这对UP非常重要^_^\n","categories":["杂谈"],"tags":["3D打印","增材制造"]},{"title":"Win10 接口跃点数和网卡优先级","url":"/posts/7a28b4fb.html","content":"我的宿舍每天到点就自动断网，在断网后要想继续Happy Surfing，不得已使用手机移动热点给电脑续网。不过电脑每次连接热点后，数据还是会从有线网卡转发出， Surfing了个寂寞。马上想到的Windows路由，查询删除路由条目一气呵成。\n\n有线网卡的优先级高于无线网卡\n问题是每一次断网，连接上热点的时候就要来一遍，觉得实在是有点麻烦，后面发现禁用有线网卡更加的快捷有效（已经可以熟练到飞速禁用网卡了），思考个一劳永逸的方法还是非常重要，直到最近发现了跃点数可以手动修改。\n控制面板\\网络和 Internet\\网络和共享中-选择网卡-Internet协议版本4(TCP&#x2F;IP)-高级\n\n将无线网卡的跃点数修改至比有线网卡小，跃点数越小网卡的优先级越高。再次查询Windows路由，发现无线网卡的优先级高于了有线网卡。\n\n$ route print #Windows路由查询命令\n\n跃点数参考：https://baike.baidu.com/item/%E8%B7%83%E7%82%B9%E6%95%B0/4941127?fr=aladdin\n","categories":["杂谈"],"tags":[]},{"title":"JAVA开发 JDK环境配置","url":"/posts/48dabd80.html","content":"（一）JDK的安装\n演示的版本为jdk-8u201-windows-x64，安装的系统为Windows10版本1909。\n安装过程默认下一步即可\n\n（二）PATH配置\n1.关闭JAVA自动检查更新\n\n2.验证JDK安装是否成功\n&amp; java -version #查询java版本\n\n\n3.设置环境变量\n控制面板\\系统和安全\\系统-高级系统设置\n\n4.新建系统变量\n变量名：JAVA\\_HOME变量值：C:\\\\Program Files\\\\Java\\\\jdk1.8.0\\_201变量名：CLASSPATH变量值：.;%JAVA\\_HOME%\\\\lib\\\\dt.jar;%JAVA\\_HOME%\\\\lib\\\\tools.jar;\n\n\n5.添加环境变量\n%JAVA\\_HOME%\\\\bin\n%JAVA\\_HOME%\\\\jre\\\\bin\n\n\n6.验证配置\n&amp; javac\n\n\n参考资料：https://www.runoob.com/w3cnote/windows10-java-setup.html\n","categories":["杂谈"],"tags":[]},{"title":"记录 win10 蓝屏 代码MEMORY_MANAGEMENT","url":"/posts/1a215452.html","content":"故障来自博主自用的Thinkpad T460p笔记本电脑，21年来使用时不断蓝屏，诱发蓝屏原因未知，每次解决方案就是无脑重启。近期耐心的整理硬盘数据，蓝屏状态复现，故细心排查蓝屏的原因。\n\n笔记本安装 Windows10(版本 1909) 火绒安全软件\n\n（手机拍摄的蓝屏界面）\n终止代码为：MEMORY_MANAGEMENT\n查询得知为内存故障，对内存进行检查。\n\n通过MemTest64测试内存，发现内存报错\n\n拆机测试单条内存，找出故障内存条。\n\n\n笔记本暂时使用单根正常内存未发生蓝屏，新内存到货后更新后续……\n下面是后续\n内存使用的是威刚万紫千红系列8GB-2666，目前价格比8GB-2400的内存还便宜。\n\n安装完成后使用MemTest测试20分钟未出现错误，目前未发生蓝屏，问题解决。\n\n下方是内存性能测试\n\n速度正常\n","categories":["杂谈"],"tags":[]},{"title":"期末小记","url":"/posts/f41f8960.html","content":"今天是2021年7月16日，我大一学习生活的最后一天。完成小学期项目答辩后，我坐在机房里等待着下课。距离上次更新博客已经过去一个多月，之前写过几篇碎碎念都没发出来，感觉我博客的风格需要调整一番。\n这一个多月还算过得充实且有趣，投入更多的精力在摄影上。带着相机走了许多的地方，五店市，鼓浪屿，沙坡尾，集美学村。感觉我就是个说走就走的人，总希望在旅途中遇见一些有趣的事。阅读了一些摄影书籍，包括有《极致之美》《照片的本质》《今日摄影》等。《极致之美》主要讲解的是一些风光摄影技术，《照片的本质》是一本精美画册，题材主要是人文摄影，读后感会在后续更新。\n聊一聊我的小学期，小学期主要是《数据结构》这门课的实践。我们有四个项目，项目包括了表，栈，树，图这一些数据结构的基本内容，详情的项目文档我会放在我的github上。在经过许多天的艰苦debug后，解决了那些让人苦笑不得的bug，还算顺利的通过了项目答辩。\n小学期期间还忙着拍摄《大学生讲思政课》活动，和舍友一起组队参加的，也是大一最后一次合作了，下一次见到他要等到大三了。我一个承包了两组拍摄和剪辑，对于我来说是个挑战，拍摄前的场地选择，拍摄环境的灯光，拍摄现场的收音，被摄者的状态每个因素都影响着视频的质量，拍摄期间我每天要在拍摄的教室待上9个小时，好在最后视频顺利的做出来了，在我连夜的后期下。\n下课了，写作有点匆忙，后面我会慢慢的修改。\n最后祝我有个充实快乐的暑假。\n","categories":["杂谈"],"tags":[]},{"title":"C语言 数据结构 二叉树操作","url":"/posts/454f07cf.html","content":"求二叉树高度\nint GetHeight(BinTree BT)\n&#123;\n    if (BT == NULL)\n        return 0;       //如果树为空返回0\n    int hl = 0, hr = 0; //保存左右分支的高度\n    hl = GetHeight(BT->Left) + 1;\n    hr = GetHeight(BT->Right) + 1;\n    return hl > hr ? hl : hr; //输出最高的分支\n&#125;\n\n统计二叉树结点个数\nint NodeCount(BiTree T)\n&#123;\n    if (T == NULL)\n        return 0;  //如果树为空返回0\n    int count = 0; //保存树的结点数\n    count = NodeCount(T->lchild) + NodeCount(T->rchild) + 1;\n    //树的结点数=左节点+右节点\n    return count;\n&#125;\n\n统计二叉树度为1的结点个数\nint NodeCount(BiTree T)\n&#123;\n    if (T == NULL)\n        return 0; //如果树为空返回0\n    if ((T->lchild == NULL &amp;&amp; T->rchild != NULL)  (T->lchild != NULL &amp;&amp; T->rchild == NULL))\n        //树的左儿子等于空与树的右儿子不等于空或树的左儿子为空与右儿子不为空\n        return NodeCount(T->lchild) + NodeCount(T->rchild) + 1;\n    else\n        return NodeCount(T->lchild) + NodeCount(T->rchild);\n&#125;\n\n","categories":["杂谈"],"tags":[]},{"title":"C语言 算法竞赛入门经典02 笔记","url":"/posts/93598324.html","content":"三位数反转（1）#include &lt;stdio.h>\nint main()\n&#123;\n    int n;\n    scanf(\"%d\", &amp;n);\n    printf(\"%d%d%d\\\\n\", n % 10, n / 10 % 10, n / 100);\n    return 0;\n&#125;\n/*\n127\n721\n*/\n\n三位数反转（2）#include &lt;stdio.h>\nint main()\n&#123;\n    int n, m;\n    scanf(\"%d\", &amp;n);\n    m = (n % 10) \\* 100 + (n / 10 % 10) \\* 10 + n / 100;\n    //printf(\"%d\", m);\n    printf(\"%03d\", m);\n    return 0;\n&#125;\n/*\n520\n025 or 25\n*/\n\n鸡兔同笼#include &lt;stdio.h>\nint main()\n&#123;\n    int a, b, n, m;\n    scanf(\"%d %d\", &amp;n, &amp;m);\n    a = (4 \\* n - m) / 2;\n    b = n - a;\n    if (m % 2 == 1  a &lt; 0  b &lt; 0)\n        printf(\"No answer\");\n    else\n        printf(\"%d %d\", a, b);\n    return 0;\n&#125;\n/*\n设鸡有a只，兔有b只\na+b=n，2a+4b=m\n*/\n\n三整数排序#include &lt;stdio.h&gt;\nint main()\n&#123;\n    int a, b, c, t;\n    scanf(&quot;%d %d %d&quot;, &amp;a, &amp;b, &amp;c);\n    if (a &gt; b)\n    &#123;\n        t &#x3D; a;\n        a &#x3D; b;\n        b &#x3D; t;\n    &#125;\n    if (a &gt; c)\n    &#123;\n\n    t &#x3D; a;\n    a &#x3D; c;\n    c &#x3D; t;\n&#125;\nif (b &gt; c)\n&#123;\n    t &#x3D; b;\n    b &#x3D; c;\n    c &#x3D; t;\n&#125;\nprintf(&quot;%d %d %d&quot;, a, b, c);\nreturn 0;\n\n&#125;\n&#x2F;*\n3 1 2\n1 3 2\n1 2 3\n\n2 3 1\n1 3 2\n1 2 3\n*&#x2F;\n\n平均数#include &lt;stdio.h>\nint main()\n&#123;\n    int a, b, c;\n    double ave;\n    scanf(\"%d %d %d\", &amp;a, &amp;b, &amp;c);\n    printf(\"%.3f\", (double)(a + b + c) / 3);\n    //(double)转换成双精度运算\n    return 0;\n&#125;\n/*\n6 2 2\n3.333\n*/\n\n温度#include &lt;stdio.h>\nint main()\n&#123;\n    double f, c;\n    scanf(\"%lf\", &amp;f);\n    c = 5 \\* (f - 32) / 9;\n    printf(\"%.3f\", c);\n    return 0;\n&#125;\n\n连续和#include &lt;stdio.h>\nint main()\n&#123;\n    int n, sum;\n    scanf(\"%d\", &amp;n);\n    sum = n \\* 1 + ((n \\* (n - 1)) / 2);\n    //等差数列求和公式\n    printf(\"%d\", sum);\n    return 0;\n&#125;\n\n","categories":["杂谈"],"tags":[]},{"title":"C语言 算法竞赛入门经典01 笔记","url":"/posts/1dd684c7.html","content":"数组循环输入输出#include &lt;stdio.h>\nint main()\n&#123;\n    int num[1024], n;\n\n    scanf(\"%d\", &amp;n); //要输入元素的个数\n    for (int i = 0; i &lt; n; i++)\n        scanf(\"%d\", &amp;num[i]); //循环输入元素\n\n    for (int i = 0; i &lt; n; i++)\n        printf(\"%d \", num[i]); //遍历数组输出元素\n\n&#125;\n\n圆柱体的表面积#include &lt;stdio.h>\n#include &lt;math.h>\nint main()\n&#123;\n    const double pi = acos(-1.0);\n    //const定义常量pi,acos(-1.0)求π的值\n    double r, h, s1, s2, s;\n    scanf(\"%lf%lf\", &amp;r, &amp;h);\n    s1 = pi * r * r;\n    s2 = 2 * pi * r * h;\n    s = s1 * 2.0 + s2;\n    printf(\"Area = %.3f\\n\", s);\n    return 0;\n&#125;\n/*\n圆柱体表面积=底面积\\*2+侧面积\n底面积=πr^2\n侧面积=2πrh\n*/\n\n交换变量-1#include &lt;stdio.h>\nint main()\n&#123;\n    int a, b, t;\n    scanf(\"%d%d\", &amp;a, &amp;b);\n    t = a;\n    a = b;\n    b = t;\n    printf(\"%d %d\\\\n\", a, b);\n    return 0;\n&#125;\n\n交换变量-2#include &lt;stdio.h>\nint main()\n&#123;\n    int a, b;\n    scanf(\"%d%d\", &amp;a, &amp;b);\n    a = a + b;\n    b = a - b;\n    a = a - b;\n    printf(\"%d %d\", a, b);\n    return 0;\n&#125;\n/*\na=a0,b=b0;\na=a+b:a0+b0,b=b0;\nb=a-b:a0+b0,b=a0;\na=a-b:a=b0,b=a0;\n*/\n\n交换变量-3#include &lt;stdio.h&gt;\nint main()\n&#123;\n    int a, b;\n    scanf(&quot;%d%d&quot;, &amp;a, &amp;b);\n    printf(&quot;%d %d&quot;, b, a);\n    return 0;\n&#125;\n\n","categories":["杂谈"],"tags":[]},{"title":"五一小记","url":"/posts/109d80d0.html","content":"\n前言\n\n今天是2021年5月5日，立夏，五一节假期的最后一天， 再过上一会我就要离开我的“小屋”，出发前往厦门。立夏，夏季的第一个节气，我那的习俗是要吃碗锅边，代表着夏天来了。这个我最喜欢的季节，让我总是充满活力，感觉一个夏天能做很多很多的事情。我上次更新小记还是在春分时，距离他有一段时间了，这次小记就讲一讲我的五一假期。\n\n福州旅行\n\n就在上次清明假期的时候，我的同学小马就提出了五一福州旅行的计划。我们从规划去哪玩、抢动车票，到收拾行李出发前前后后经过了一个月的时间。小马非常认真细致的做好了旅行前的准备，可以看出小马对这次旅行重视。毕竟这是大学生活的第一次旅行，不想留下太多的遗憾。\n时间就这样到了五一节当天，我睡饱觉了就起床开始收拾。和小马在同一班动车上碰面了，刚好张同学也从厦门来到了福州，我们一行人就在东街口碰面了。然后我们就在沿着三坊七巷的南后街一路‘逛吃拍”，中午阳光太毒在大洋百货躲了好久。下午想去看看花巷教堂，可惜因为疫情的原因不对外开放。最后我们又再次回到了南后街‘逛吃拍”，把三坊七巷逛了个遍。\n在外逛街的时间过得挺快，三点张同学就要先走了。我们逛到了五点半，吃了一点东西就匆匆往车站跑。最后大家都很Happy的结束了这次旅行。\n\n文字连接世界\n\n我独自一人在街上逛时，碰到了一个许久未见的面孔，是一位聋哑人叔叔。起先是我和朋友们在华莱士吃饭，碰见他独自一人。他把吃不完的薯条给了我们，为了表示感谢我们就和他聊了起来。一开始是通过手语，我们一群人也不懂几个手语。后面他表示自己识字，我们就用手机上的记事本和他交流了起来。他看见我们的热情，和我们讲了他参加端午龙舟大赛，龙舟划的很快的故事。讲了他想要参加中华龙舟大赛，每天积极锻炼身体的故事……后面我们经常在体育场碰见他光着膀子，骑着一辆折叠的自行车，不出我们意外的有着精壮的肌肉。\n疫情加上上了大学，家那边的体育场就变得很少很少去。这次他向我比着手语，我却不知该怎么回复，我又再次打开了手机的记事本……有形文字和手语连接的是他与世界。\n\n从玉荷东路望含光塔\n《热爱生命》汪国真\n\n 我不去想是否能够成功\n 既然选择了远方\n 便只顾风雨兼程\n 我不去想能否赢得爱情\n 既然钟情于玫瑰\n 就勇敢地吐露真诚\n 我不去想身后会不会袭来寒风冷雨\n 既然目标是地平线\n 留给世界的只能是背影\n 我不去想未来是平坦还是泥泞\n 只要热爱生命\n 一切，都在意料之中\n\n","categories":["杂谈"],"tags":[]},{"title":"C语言 倒三角形（triangle）","url":"/posts/ead11387.html","content":"输入正整数n&lt;&#x3D;20,输出一个n层的倒三角形。例如，n&#x3D;5时的输出如下；\n#########\n #######\n  #####\n   ###\n    #\n\n输出倒三角图案#include &lt;stdio.h>\nint main()\n&#123;\n    int n = 0; //n保存输出的层数\n\n    scanf(\"%d\", &amp;n);\n    for (int i = 0; i &lt; n; i++) //外循环决定输出的层数\n    &#123;\n        for (int k = 0; k &lt; i; k++) //每层前面的空格数\n            printf(\" \");\n        for (int j = 0; j &lt; 2 \\* n - 2 \\* i - 1; j++) //每层的#号数量\n            printf(\"#\");\n        printf(\"\\\\n\"); //每层输出完后换行\n    &#125;\n    \n    return 0;\n\n&#125;\n\n","categories":["杂谈"],"tags":[]},{"title":"博客显示运行天数 PHP代码","url":"/posts/f3a6111f.html","content":"在博客页脚的位置显示运行天数，通过几行php的代码实现的。\n&lt;?php\n\n$time = gmmktime(0, 0, 0, 12, 5, 2020); //博客诞生时间\n\nif (time() &lt; $time) &#123; //时间错误提示\n\n    echo \"Error\";\n\n&#125; else &#123;\n\n    $day = intval((time() - $time) / 86400);\n    //天数=(当前时间-过去时间)/86400秒\n    $result = $day . \"天\";\n    \n    echo \"博客已运行：\";\n    echo $result;\n\n&#125;\n\n?>\n\n","categories":["杂谈"],"tags":[]},{"title":"C语言 排序算法 选择排序 笔记","url":"/posts/8e0d6441.html","content":"选择排序就是重复“从待排序的数据中寻找最小值，将其与序列最左边的数字进行交换”。这一操作的算法。在序列中寻找最小值时使用的是线性查找。（每一趟比较出最小的数）\nExample：  \n排序前：3 1 4 5 2  \n第1趟：**1** 3 4 5 2  \n第2趟：**1 2** 4 5 3  \n第3趟：**1 2 3** 5 4  \n第4趟：**1 2 3 4** 5\n\n选择排序使用了线性查找来寻找最小值，因此在第 1 轮中需要比较 n -1 个数字，第2 轮需要比较 n -2 个数字……到第 n -1 轮的时候就只需比较 1 个数字了。因此，总的比较次数与冒泡排序的相同，都是 (n-1)+(n-2)+…+1 ≈ n2&#x2F;2 次。每轮中交换数字的次数最多为 1 次。如果输入数据就是按从小到大的顺序排列的，便不需要进行任何交换。选择排序的时间复杂度也和冒泡排序的一样，都为 O(n^2)。\nvoid selection(int num[], int n)\n&#123;\n    int temp;\n    for (int i = 0; i &lt; n - 1; i++) //开始选择排序\n        //每次以num[i]为基准值 num[i]为当前最小值\n        for (int j = i + 1; j &lt; n; j++)\n            if (num[i] > num[j])\n            &#123;\n                //遍历数组中的元素进行比较 小于基准值就进行交换\n                temp = num[i];\n                num[i] = num[j];\n                num[j] = temp;\n            &#125;\n&#125;\n\n参考书籍：\n\n1.《算法图解》作者：\\[美\\] Aditya Bhargava；译者：袁国忠；ISBN：978-7-115-44763-0  \n2.《我的第一本算法书》 作者：（日）石田保辉，（日）宫崎修；译者：张贝；ISBN：978-7-115-49524-2\n\n","categories":["杂谈"],"tags":[]},{"title":"C语言 排序算法 冒泡排序 笔记","url":"/posts/f21436a4.html","content":"C语言 排序算法 冒泡排序 笔记冒泡排序就是重复“从序列右边开始比较相邻两个数字的大小，再根据结果交换两个数字的位置”这一操作的算法。在这个过程中，数字会像泡泡一样，慢慢从右往左“浮”到序列的顶端（每趟比较找出该趟最大的数），所以这个算法才被称为“冒泡排序”。\nExample：\n\n排序前：3 1 4 5 2 \n\n第1趟：1 3 4 2 **5** \n\n第2趟：1 3 2 **4 5** \n\n第3趟：1 2 **3 4 5** \n\n第4趟：1 **2 3 4 5\n\n每一趟要比较n - i - 1次，一共要比较n - 1趟,总的比较次数为 (n -1) +(n -2) +…+1 ≈ n^2&#x2F;2。冒泡排序的时间复杂度为O(n^2),是一种稳定排序算法。\n通过c语言代码实现：\nvoid bubble(int num[], int n)\n&#123;\n    int temp;\n    for (int i &#x3D; 0; i &lt; n - 1; i++) &#x2F;&#x2F;开始冒泡排序\n        &#x2F;&#x2F;遍历数组找出最大\n        for (int j &#x3D; 0; j &lt; n - i - 1; j++)\n            if (num[j] &gt; num[j + 1]) &#x2F;&#x2F;两两比较\n            &#123;\n                &#x2F;&#x2F;两两交换\n                temp &#x3D; num[j];\n                num[j] &#x3D; num[j + 1];\n                num[j + 1] &#x3D; temp;\n            &#125;\n&#125;\n\n参考书籍：\n1.《算法图解》作者：[美] Aditya Bhargava；\n译者：袁国忠；ISBN：978-7-115-44763-0\n2.《我的第一本算法书》 \n作者：（日）石田保辉，（日）宫崎修；译者：张贝；ISBN：978-7-115-49524-2","categories":["杂谈"],"tags":[]},{"title":"返校小记","url":"/posts/8ca25123.html","content":"3月12日\n返校第一晚凌晨两点，被舍友的一点动静夺去了睡眠，在这狭小且坚硬的铁床上辗转反侧无法再次入眠。上了大学以来我的睡眠质量一直都不佳，一有什么风吹草动就会醒来。\n\n到今天，我的十八岁已经过去了三分之二，本以为十八岁是我最好的青春岁月，却没有想到我会在十八岁对未来感到无力，而且是如此的无力。焦虑，胆怯这些情绪不断的出现在我的每一天中。\n3月15日\n返校后的第一个星期一，还是躺在坚硬的床板上无法入睡，想了想我学不会的英语，搞不懂的数学，改不好的代码，压力感扑面而来。只恨曾经的自己不好好学习，想想自己的经历也觉得好笑，曾经以为自己读不到大学，又拼搏了三年来到这里，面对着这大学生活，充满了无力感。\n\n想到了我的朋友们，他们都是非常努力的人，努力的生活，努力的学习。上大学后与他们的距离越来越远了，也许这就是许巍歌中聚散的无常？希望他们此时此刻梦乡正甜蜜。不知道我的父亲今天回家了吗？或是在工地上奔波，有没有和母亲一起吃晚饭？或是自己一人吃晚饭，晚饭后有没有一起出门散步？还是太疲惫就靠在沙发上睡了，小县城的夜晚是如此迷人，而我却离她几百公里……\n\n\n","categories":["杂谈"],"tags":[]},{"title":"WP ULike点赞功能插件","url":"/posts/150627de.html","content":"博客一直以来都只有评论互动，今天给站点添加了WP ULike。多一种互动模式。\n可以单独设置文章和评论的点赞的样式。\n\n\n\n\n设置点赞成功后的提示语\n\n\n↓下方是点赞测试按钮\n","categories":["WordPress"],"tags":[]},{"title":"《带上她的眼睛》刘慈欣——读书分享","url":"/posts/b8f31d0f.html","content":"“我们给这朵小花起个名字好吗？嗯……叫她梦梦吧。我们再看看那一朵好吗？ 他该叫什么呢？嗯，叫小雨吧；再到那一朵那儿去，啊，谢谢，看她的淡蓝色，她的名字应该是月光……“ 我们就这样一朵朵地看花，闻花，然后再给它起名字。她陶醉于其中，没完没了地进行下去，忘记了一切。我对这套小女孩的游戏实在厌烦了，到我坚持停止时，我们已给上百朵花起了名字。\n寒假时阅读的一篇短片科幻小说，出自刘慈欣。这篇小说被选进了七年级的语文教材，小说将刘式浪漫体现的淋漓尽致。\n故事从主角假期开始，不过这个假期有所不同。他要带上一双眼睛前去度假，激起了我的好奇心，为什么要带上她的眼睛？要怎么带上她的眼睛？以为是以盲人或将要失明展开故事。继续阅读小说，发现眼睛是一副高科技眼镜，故事通过这副高科技眼镜展开。\n所谓眼睛就是一付传感眼镜，当你戴上它时，你所看到的一切图象由超高频信息波发射出去，可以被远方的另一个戴同样传感眼镜的人接收到，于是他就能看到你所看到的一切，就象你带着他的眼睛一样。\n大刘小说的人文浪漫直接扑面而来。主角“一行”开始浪漫有趣的度假旅行。一起在草原上给花儿起名、一起感受河水的清凉、一起观赏美丽的日落、一起举头望明月…这一段记忆却一直停留在主角脑海中，直到很长时间以后主角也会想起这次浪漫的旅行。\n“看着晚霞渐渐消失，夜幕慢慢降临森林，就象在听一首宇宙间最美的交响曲。”“请带我出去好吗？我们去看月亮，月亮该升起来了！”\n有一天主角突然醒悟过来，原来“她”不在太空，主角疯了似的跑向主任的办公室……后面的故事感兴趣就自己去阅读了，下面是我阅读小说后的感想。\n关于作者刘慈欣，他的想象力实在是太丰富了，世界观设定的恢宏大气，故事写的引人入胜，让我一直想阅读下去。小说引发了我的思考，在这个节奏越来越快的时代，人们可以通过手机看见世界各地的风景。但这个世界也开始浮躁起来，有着无穷无尽的加班，有着资本在贩卖焦虑，有着为了利益不顾一切，不知道未来属于我的生活会是怎么样的，时间会成为我最宝贵的资源？缺少时间去旅行去和亲友相聚？我也不是很希望过着996的生活，此刻我也不知道我的路该如何去走，只能走走看看吧。看到这篇小说被选进语文七年级的教材我很高兴，这是一篇优秀的、浪漫的、充满想象力的作品，在我初中时最喜欢读的也是这一类的作品。希望这一篇小说能打开他们未来的大门。\n有一个想法安慰着我：不管走到天涯海角，我离她都不会再远了。\n\n","categories":["杂谈"],"tags":[]},{"title":"2021年“他”会好吗？","url":"/posts/95a871dd.html","content":"2020把旧时代撕得稀烂，世界正面临的百年未有之大变局。转眼2021年来了，21年会给我们带来什么？会让已经混乱的世界再次有序起来？给出的答案是不会和不能。21年的到来并不能改变什么，能改变什么的只有我们自己做出改变。白岩松谈到他为跨入新世纪做直播。跨入21世纪代表着人类的历史正走向下个一千年，所有的人都对21世纪充满了希望，仿佛21世纪一到来，所有的问题都会迎刃而解。但并没有，刚做完直播走出电视台的白岩松，看到两辆车撞在一起，两位司机还在争吵着。问题解决了吗？问题还在哪里，一切还是如初。\n既然2021年“他”不会好了。我们应该如何优雅的度过2021年？不妨先想一想21年要面对着什么。\n首先是国外的疫情控制不是特别理想，新冠病毒造成的影响还未结束，大概率很长的一段时间也不会结束。在疫情面前没有国家能够独善其身，而因为疫情产生的一些负面情绪我们仍要面对。\n其次手机越来越占用你的时间，手机如同一个单向的时光机。屏幕一亮一灭，带你去往未来几个小时后的时间。其实不是手机越来越占用我们的时间，而是手机上的app越来越需要我们的时间，回想以前智能手机刚诞生的时代，手机app还没有井喷式发展，在手机上能做的少之又少。现在你打开你手机的任意一个app，无论这个app是什么类型的，都会有个划不到底的视频推荐或是文章推荐，标题特别博人眼球。就是这样的app，推送的一堆二进制垃圾，特别需要用户的使用时间，需要用户的滞留。靠用户的点击来吸引流量，流量就是这些app公司的财富。\n这一切都是基于信息流推荐，信息流推荐算法总能够不断的推送你感兴趣的内容。这也是哪一些app的为什么划不到底端的原因。而我们人的好奇心总是驱使着我们浏览一些争议性的内容，这就导致了争议性内容的热度特别的高，更加容易的被更多人看到，也更加容易的被儿童看到，造成了互联网低龄用户的攻击性普遍较高，加深了互联网的戾气。有没有办法限制住一些争议性内容的传播呢？答案是有，但国内互联网公司，还在为生存发展较着劲。恐怕是没有那个公司会放弃这一大部分的流量。\n最后，优雅的度过2021年方法只有努力生活、好好学习，用积极向上来对待“他”。\n“欲穷千里目，更上一层楼。”\n\n","categories":["杂谈"],"tags":[]},{"title":"C语言 随机数 rand()","url":"/posts/3b135d1a.html","content":"rand()函数的使用\n#include &lt;stdio.h>\n#include &lt;stdlib.h>\nint main()&#123;    \n    int a = rand();    \n    printf(\"%d\\n\", a);    \n    return 0;\n&#125;\n\n多次执行程序发现结果都相同。因为种子在每次启动计算机时是随机的，但计算机启动以后它就不再变化了。\n#include &lt;stdio.h>\n#include &lt;stdlib.h> //rand()srand()\n#include &lt;time.h>   //time()\nint main()&#123;    \n    srand((unsigned)time(NULL)); //生成随机数之前先进行播种    \n    int a = rand();    \n    printf(\"%d\\n\", a);    \n    return 0;\n&#125;\n\n通过循环生成多个随机数\nvoid input_fun(int num[], int n)\n&#123;\n    srand((unsigned)time(NULL)); //生成随机数之前先进行播种\n    for (int i = 0; i &lt; n; i++)\n        num[i] = rand();\n    print_fun(num, n);\n&#125;\n\n生成一定范围内的随机数\nvoid input_fun(int num[], int n)\n&#123;\n    srand((unsigned)time(NULL)); &#x2F;&#x2F;生成随机数之前先进行播种\n    for (int i &#x3D; 0; i &lt; n; i++)\n        num[i] &#x3D; rand() % 100 + 5; &#x2F;&#x2F;生成5-99之间的随机数\n    print_fun(num, n);\n&#125;\n\n//公式\nrand() % a + b;\n//最大值为a-1，最小值为b；","categories":["杂谈"],"tags":[]},{"title":"Windows命令介绍ping网络诊断工具","url":"/posts/cf4b2030.html","content":"ping主要是向特定的目的主机发送 ICMP（Internet Control Message Protocol 因特网报文控制协议）Echo 请求报文，测试目的站是否可达及了解其有关状态。\n$ ping /？ #查看ping命令的帮助\n\n\nExample\n#最常用的格式\n$ ping 114.114.114.114 #向IP地址发送请求报文\n\n\n通过Wireshark捕获数据包发现，ping命令默认发送4个请求报文，源地址为PC地址，目的地址为指定的主机，默认TTL为128，数据包大小为32bytes（字节）\n\n#改点参数看看\n$ ping www.baidu.com -n 6 -l 64 -i 255\n\n\n通过Wireshark捕获数据包发现，ping命令发送了6个请求报文，源地址为PC地址，目的地址被解析成为了网站IP地址，TTL变成了255，数据包大小变成64bytes（字节）\n\n","categories":["杂谈"],"tags":[]},{"title":"回忆我的一次喜欢","url":"/posts/139c5c82.html","content":"1月10日，你约自己喜欢的女孩一起去看电影，电影很精彩。\n那天是学校寒假的前一天，下午在操场上举行闭学式。不知是出于什么（告白？），一周前就和她相约了晚上的电影。晚上早早的就在商场门口等她，那段等待漫长的如同一生，到了电影开场前的几分钟，终于看见她小跑过来。印象中她那天晚上穿着长裙，脸上没有化妆。“再化妆就要迟到了”她说。我们就这样惬意的交谈着进了影院。电影是京都映画的《紫罗兰永恒花园外传》，讲了一个关于思念的故事。电影结束以后我和她一起散步回去，路上聊着晚上的电影，聊着在学校发生的有趣的事。到了她的小区门口，互相说了再见后，各自回家了。以为这一天就这样结束了，到了心头的话抵不过我犹豫不决。我骑着车慢悠悠的走，在一个红绿灯路口停下来的时候，我的手机响了，是她打过来的电话，接起来只听见她怯怯的说了一句打错了。就挂断了，过了一会，我的手机再次响起，我马上接起电话，“我有话对你说。”，两个人默契的说。我放下手机，奔回小区门口。\n我被拒绝了……\n","categories":["杂谈"],"tags":[]},{"title":"Wireshark通过WinPcap捕获远程数据包","url":"/posts/2ab0b069.html","content":"1.安装WinPcap下载地址：https://www.winpcap.org/install/default.htm默认Next&gt;即可\n\n2.Rpcap的使用$ rpcapd -h **#查看工具使用帮助**\n\"C:\\\\Program Files (x86)\\\\WinPcap\\\\rpcapd.exe\" -h\n\n\n$ rpcapd -n #不启用认证功能，任何主机都可以访问rpcapd服务\n$ rpcapd -p #设置端口，默认为2002\n\n\n3.开启Wireshark捕获远程主机\n\n\n\n4.允许rpcapd.exe通过防火墙\n添加入站规则\n\n\n\n\n\n\n\n添加出站规则（步骤相同参考添加入站规则即可）\n\n\n\n","categories":["杂谈"],"tags":[]},{"title":"Windows防火墙允许ping(ICMP)数据包通过","url":"/posts/64cd2ac2.html","content":"1.控制面板-所有控制面板项-Windows防火墙-高级设置\n2.高级安全Windows防火墙\n入站规则-文件和打印机共享(回显请求 - ICMPv4-In)\n\n\n\n出站规则-文件和打印机共享(回显请求 - ICMPv4-Out)\n\n\n","categories":["杂谈"],"tags":[]},{"title":"CentOS7防火墙基本使用","url":"/posts/d606ee8b.html","content":"实验环境为CentOS7.5\n[root@localhost ~]# systemctl disable firewalld #禁用防火墙\n\nRemoved symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.\nRemoved symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.\n[root@localhost ~]# systemctl enable firewalld #启用防火墙，开机启动\n\nCreated symlink from /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service to /usr/lib/systemd/system/firewalld.service.\nCreated symlink from /etc/systemd/system/multi-user.target.wants/firewalld.service to /usr/lib/systemd/system/firewalld.service.\n[root@localhost ~]# systemctl stop firewalld #关闭防火墙\n\n[root@localhost ~]# systemctl start firewalld#启动防火墙\n\n[root@localhost ~]# systemctl restart firewalld#重启防火墙\n\n[root@localhost ~]# systemctl status firewalld#查看防火墙状态\n\n● firewalld.service - firewalld - dynamic firewall daemon\n   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled)\n   Active: active (running) since 一 2019-10-28 10:02:07 CST; 1min 13s ago\n     Docs: man:firewalld(1)\n Main PID: 3101 (firewalld)\n   CGroup: /system.slice/firewalld.service\n           └─3101 /usr/bin/python -Es /usr/sbin/firewalld --nofork --nopid\n\n10月 28 10:02:07 localhost.localdomain systemd[1]: Starting firewalld - dynamic firewall daemon...\n10月 28 10:02:07 localhost.localdomain systemd[1]: Started firewalld - dynamic firewall daemon.\n[root@localhost ~]# firewall-cmd --zone=public --add-port=80/tcp --permanent#允许80端口tcp协议通过防火墙\n\n[root@localhost ~]# firewall-cmd –reload #更新防火墙规则\n\nsuccess\n[root@localhost ~]# firewall-cmd --zone=public --query-port=80/tcp #查看80端口\n\nyes\n[root@localhost ~]# firewall-cmd --zone=public --list-ports #查看所有打开端口\n\n80/tcp\n[root@localhost ~]# firewall-cmd --zone=public --remove-port=80/tcp --permanent#删除端口\n\nsuccess","categories":["Linux"],"tags":[]},{"title":"CentOS7配置本地yum","url":"/posts/a61a1f0.html","content":"实验环境为Centos7.5\n[root@localhost ~]# mkdir /mnt/cdrom #创建挂载文件夹\n\n[root@localhost ~]# mount /dev/cdrom /mnt/cdrom #挂载光驱ISO文件\n\nmount: /dev/sr0 写保护，将以只读方式挂载\n#[root@localhost ~]# mount /opt/CentOS-7-x86_64-Minimal-1804.iso /mnt/cdrom #挂载本地ISO文件也是相同的#\n[root@localhost ~]# ls /mnt/cdrom/ #检查挂载文件\n\nCentOS_BuildTag  EULA  images    LiveOS    repodata              RPM-GPG-KEY-CentOS-Testing-7\nEFI              GPL   isolinux  Packages  RPM-GPG-KEY-CentOS-7  TRANS.TBL\n[root@localhost ~]# cd /etc/yum.repos.d/ #进入yum配置文件夹\n\n[root@localhost yum.repos.d]# ls #查看yum配置文件\n\nCentOS-Base.repo  CentOS-Debuginfo.repo  CentOS-Media.repo    CentOS-Vault.repo\nCentOS-CR.repo    CentOS-fasttrack.repo  CentOS-Sources.repo\n[root@localhost yum.repos.d]# mv CentOS-Base.repo CentOS-Base.repo.bak #移动网络yum配置文件，无法找到时会转到本地下载。\n\n[root@localhost yum.repos.d]# cp CentOS-Media.repo CentOS-Media.repo.bak #备份本地yum配置文件\n\n[root@localhost yum.repos.d]# vi CentOS-Media.repo #编辑本地yum配置文件\n\n# CentOS-Media.repo\n#\n#  This repo can be used with mounted DVD media, verify the mount point for\n#  CentOS-7.  You can use this repo and yum to install items directly off the\n#  DVD ISO that we release.\n#\n# To use this repo, put in your DVD and use it with the other repos too:\n#  yum --enablerepo=c7-media [command]\n#\n# or for ONLY the media repo, do this:\n#\n#  yum --disablerepo=\\* --enablerepo=c7-media [command]\n\n[c7-media]\nname=CentOS-$releasever - Media\nbaseurl=file:///media/CentOS/\n        file:///mnt/cdrom/ #将目录改成光盘挂载点\n\n        file:///media/cdrecorder/\ngpgcheck=1\nenabled=1 #将enabled=0改成1\n\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n#保存退出\n\n[root@localhost yum.repos.d]# yum install -y net-tools  #安装网络工具进行测试\n\n.\n.此处省略安装过程\n.\n完毕！#本地yum可以正常使用了","categories":["Linux"],"tags":[]},{"title":"CentOS7配置静态IP地址","url":"/posts/37d85d68.html","content":"实验环境为Centos7.5\n\n打开配置文件\n\n[root@localhost ~]# cd ..\n[root@localhost /]# ls\nbin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\n[root@localhost /]# vi etc/sysconfig/network-scripts/ifcfg-ens33\n\n\n编辑配置文件\n\nTYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=statics #dhcp为动态获取IP地址，statics为静态获取IP地址。\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=no\nIPV6INIT=yes\nIPV6_AUTOCONF=yes\nIPV6_DEFROUTE=yes\nIPV6_FAILURE_FATAL=no\nIPV6_ADDR_GEN_MODE=stable-privacy\nNAME=ens33\nUUID=4b20da7e-0986-46f4-8e98-ab3b16fc4f0e\nDEVICE=ens33\nONBOOT=yes #是否开机启用该网卡no为否，yes为是。\n\n#在后方添加一下\nIPADDR=192.168.10.10 #IP地址设置\n\nNETMASK=255.255.255.0 #子网掩码设置\n\nGETWAY=192.168.10.1 #网关设置\n#保存退出：ESC Shift+: 输入:wq #保存并退出\n\n\n重启网卡\n\n[root@localhost /]# systemctl restart network\n测试\n[root@localhost /]# ping 192.168.10.10 #ping自己或者ping局域网其他主机测试\n\nPING 192.168.10.10 (192.168.10.10) 56(84) bytes of data.\n64 bytes from 192.168.10.10: icmp_seq=1 ttl=64 time=0.061 ms\n64 bytes from 192.168.10.10: icmp_seq=2 ttl=64 time=0.072 ms\n64 bytes from 192.168.10.10: icmp_seq=3 ttl=64 time=0.070 ms\n64 bytes from 192.168.10.10: icmp_seq=4 ttl=64 time=0.062 ms\n^C #Ctrl+C中止发包\n--- 192.168.10.10 ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 3007ms\nrtt min/avg/max/mdev = 0.061/0.066/0.072/0.007 ms","categories":["Linux"],"tags":[]},{"title":"WordPressss设置WP Mail SMTP","url":"/posts/8305006f.html","content":"\n申请阿里云邮件推送服务（免费）\n\n申请地址\n配置文档\n\n安装配置WP Mail SMTP\n\n配置WP Mail SMTP\n\n注意：发件人要和STMP用户名相同，否则会发送错误。\n\n选择其他SMTP\nSMTP主机填写阿里云SMTP服务地址：smtpdm.aliyun.com\n\n端口填写：465\n保存设置后发送测试邮件\n参考阿里云的配置文档\n\nExample\n\n\n填写错误后的结果,笔者就是在这而卡了两天。\n","categories":["WordPress"],"tags":[]},{"title":"WordPress添加ICP备案号和友链","url":"/posts/83d1e521.html","content":"在外观-主题编辑器-主题文件(footer.php)中设置\n在 &lt;div&gt; 内添加HTML &lt;a&gt; 标签\n\n&lt;a href=\"http://www.pointdomain\">Name&lt;/a>\n&lt;!-- 指向的域名 超链接的名字 -->\n\n参考博客：https://www.w3school.com.cn/tags/tag_a.asp\n","categories":["WordPress"],"tags":[]},{"title":"WordPress配置Apache强制http跳转至https","url":"/posts/71f4bfde.html","content":"\n修改网站根目录下的.htaccess文件（修改前先建立一个备份）\n\n$ /home/www/htdocs # .htaccess的路径\n\n .htaccess为隐藏文件\n$ ls -a #显示当前目录下的所有文件及文件夹\n\n\n在文件末尾添加以下代码即可\n\nRewriteEngine on  #开启重定向       \nRewriteBase &#x2F;             \nRewriteCond %&#123;SERVER_PORT&#125; !^443$\nRewriteRule ^.*$ https:&#x2F;&#x2F;%&#123;SERVER_NAME&#125;%&#123;REQUEST_URI&#125; [L,R]   \n#填写你的域名\n\n\nExample\n\n# BEGIN WordPress\n# 在“BEGIN WordPress”与“END WordPress”之间的指令（行）是\n# 动态生成的，只应被WordPress过滤器修改。\n# 任何对标记之间的指令的修改都会被覆盖。\n&lt;IfModule mod_rewrite.c&gt;\nRewriteEngine On\nRewriteRule .* - [E&#x3D;HTTP_AUTHORIZATION:%&#123;HTTP:Authorization&#125;]\nRewriteBase &#x2F;\nRewriteRule ^index\\.php$ - [L]\nRewriteCond %&#123;REQUEST_FILENAME&#125; !-f\nRewriteCond %&#123;REQUEST_FILENAME&#125; !-d\nRewriteRule . &#x2F;index.php [L]\n&lt;&#x2F;IfModule&gt;\n\n# END WordPress\n# 设置https跳转\nRewriteEngine on          \nRewriteBase &#x2F;             \nRewriteCond %&#123;SERVER_PORT&#125; !^443$    \nRewriteRule ^.*$ https:&#x2F;&#x2F;%&#123;SERVER_NAME&#125;%&#123;REQUEST_URI&#125; [L,R]  ","categories":["WordPress"],"tags":[]},{"title":"Hello,world!个人博客的第一篇文章。","url":"/posts/102fdd11.html","content":"光临博客的朋友，你好哇！转眼就到了2020年的最后一个月，距离我18岁生日过去了三个多月。一直热衷于分享的我，想建设博客分享我在IT这条路上的故事，苦于之前年龄太小无法通过太多的认证。终于在大学开学两个月后，在一个忙里偷闲的星期六，从早晨起床就着手搭建博客，申请阿里云学生优惠、购买阿里云主机、配置WordPress，一气呵成。在这个风和日丽的下午，可以坐在电脑前写我博客的第一篇文章。虽然网站的备案还未通过，你们还不能第一时间看到这篇文章……\n\n\n小吐槽：我们宿舍的桌子真的是太小了\n\n","categories":["杂谈"],"tags":[]}]